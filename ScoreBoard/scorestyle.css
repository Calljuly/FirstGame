/* Import css code from mainpage. Reuse header's codes*/

@import url("/mainpage/mainstyle.css");
/* Display content as block,create size for section and set som default properties for the whole Section */

section {
    display: block;
    width: 75%;
    margin: auto;
    background-color: black;
    font-family: 'Sulphur Point', sans-serif;
    color: white;
    overflow: hidden;
}

/* This is the h1 'Score Board', Decorate and align it in the center  */

section #scoreHeaderText {
    color: white;
    text-align: center;
    width: 100%;
    padding: 6px;
    border-radius: 10px;
    border-bottom: rgb(16, 83, 83) solid 2px;
    background-color: rgb(16, 83, 83);
}

/* This is the table, giving full section screen width, align text in the center, create border
and set its position as relative so for four spans would be able to move relatively to it */

#scoreList {
    color: white;
    border-collapse: separate;
    width: 100%;
    padding-bottom: 20px;
    text-align: center;
    border: 1px solid gray;
    border-radius: 5px;
    position: relative;
}

/* Create some padding for table head */

#scoreList th {
    padding: 20px;
}

/* The first span which locate on the top of the table data.This span will move from left to right.
Posision the span as absolute  so it will move accordingly to the table box.Using e.g. left top, 
right, bottom to adjust the position of the span.To make it move simple using keyframe. Let the size
of the span grow gradually. Use linear-gradient to create the color transformation, such as from
transparent to blue. Animation-direction to make the span move back and forward */

#scoreList th span:nth-child(1) {
    position: absolute;
    top: 0px;
    left: 0px;
    height: 2px;
    width: 20px;
    background: linear-gradient(to right, transparent, rgb(84, 224, 224));
    animation: animateline1 20s ease-out infinite;
    animation-direction: alternate-reverse;
}

/* Sizes grow */

@keyframes animateline1 {
    0% {
        width: 10%;
    }
    20% {
        width: 20%;
    }
    40% {
        width: 40%;
    }
    60% {
        width: 60%;
    }
    80% {
        width: 80%;
    }
    100% {
        width: 100%;
    }
}

/* This span will move from top to bottom.The second span works pretty much similar as the first span, 
just all it needs is position-adjusting.Its starting point is top and right at 0px  */

#scoreList th span:nth-child(2) {
    position: absolute;
    top: 0px;
    right: 0px;
    width: 2px;
    background: linear-gradient(to bottom, transparent, rgb(13, 131, 105));
    animation: animateline2 10s linear infinite;
    animation-direction: alternate-reverse;
}

/* Sizes grow for the second span */

@keyframes animateline2 {
    0% {
        height: 10%;
    }
    20% {
        height: 20%;
    }
    40% {
        height: 40%;
    }
    60% {
        height: 60%;
    }
    80% {
        height: 80%;
    }
    100% {
        height: 100%;
    }
}

/* Span three will share the same keyframe as the first span */

#scoreList th span:nth-child(3) {
    position: absolute;
    bottom: 0px;
    right: 0%;
    height: 2px;
    background: linear-gradient(to left, transparent, rgb(118, 200, 206));
    animation: animateline1 20s linear infinite;
    animation-direction: alternate-reverse;
}

/* Span four will share the same keyframe as the first span */

#scoreList th span:nth-child(4) {
    position: absolute;
    bottom: 0px;
    left: 0px;
    width: 2px;
    background: linear-gradient(to top, transparent, rgb(86, 201, 166));
    animation: animateline2 10s linear infinite;
    animation-direction: alternate-reverse;
}
/* Use Media query to adjust the font-size */
@media screen and (max-width:425px) {
    #scoreList {
        font-size: 10px;
    }
    #scoreHeaderText {
        font-size: 12px;
    }
    #scoreList th span {
        display: none;
    }
}